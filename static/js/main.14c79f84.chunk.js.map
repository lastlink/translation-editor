{"version":3,"sources":["App.js","components/PathLink/PathLink.js","components/AddLocaleButton/AddLocaleButton.js","components/DeleteLocale/DeleteLocaleButton.js","components/GlobalMenu/GlobalMenu.js","utils/iterate.js","utils/pathString.js","components/Sidebar/Sidebar.js","components/DeleteButton/DeleteButton.js","components/MessageEditor/MessageEditor.js","components/AddButton/AddButton.js","utils/findPath.js","components/MessageExplorer/MessageExplorer.js","components/NavLinks/NavLinks.js","utils/pathId.js","components/Location/Location.js","components/PathParser.js","utils/fastClone.js","components/JSONEditor.js","components/FileInputDropdown.js","utils/download.js","components/ImportLinks/ImportLinks.js","components/JSONPanel/JSONPanel.js","components/Main.js","utils/generateStructure.js","utils/pathName.js","components/PrevNextRedirect.js","utils/generatePaths.js","serviceWorker.js","index.js"],"names":["WrappedComponent","PathLink","nextProps","this","props","path","className","withAnchor","_","isEqual","icon","type","classes","destination","str","id","to","activeClassName","exact","Icon","name","React","Component","addLocale","messages","useState","locale","setLocale","locales","Object","keys","enabled","length","indexOf","toLowerCase","Input","action","disabled","onClick","e","preventDefault","placeholder","value","onChange","target","fluid","deleteLocale","handleDelete","targetProps","Popup","wide","trigger","Button","negative","on","hoverable","hideOnScroll","position","popperModifiers","preventOverflow","boundariesElement","map","availableLocale","Label","key","size","Flag","slice","GlobalMenu","PureComponent","iterate","base","onString","onObject","current","get","subs","deeper","subPath","join","MessageElement","isValid","CollectionElement","content","Iterator","bind","paths","structure","pathData","find","pathEval","pathString","arr","parse","Sidebar","deleteValue","MessageField","Segment","Form","Field","htmlFor","toUpperCase","TextArea","MessageEditor","updateValue","getMessage","message","forEach","handleChange","Group","addValue","pathName","setPathName","setType","Select","compact","options","text","defaultValue","pathname","pathId","index","MessageExplorer","location","findPath","subPaths","filter","Menu","vertical","AddButton","withRouter","prev","next","newPath","LocationSection","active","link","Breadcrumb","Section","LocationSections","section","Fragment","Divider","Location","messagePath","useParams","item","found","JSON","stringify","ajv","Ajv","allErrors","verbose","JSONEditor","editor","setRef","runValidation","setOptions","state","instance","getRef","json","setState","clone","result","jsonEditor","validateSchema","option","allowedModes","mode","readOnly","onError","htmlElementProps","prevProps","modes","onEditable","setMode","set","destroy","rest","ace","ref","FileInput","newFile","files","reader","FileReader","onload","event","fileObject","fileContent","minify","Error","fileName","escape","fileType","fileLastModifiedDate","lastModifiedDate","toLocaleString","fileMeta","lastModified","console","error","match","readAsText","window","File","FileList","Blob","Dropdown","Item","label","input","click","hidden","downloadJSON","filename","mimeType","fakeLink","document","createElement","style","display","body","appendChild","blob","navigator","msSaveOrOpenBlob","setAttribute","URL","createObjectURL","download","ImportLinks","handleFileChangeOne","handleFileChangeAll","handleDownloadByLocale","handleDownloadAll","fileData","upload","fileNameArr","split","floating","labeled","button","JSONPanel","handleJSONChange","history","Main","JSONUpdateValue","PathParser","keyMap","PREV","NEXT","PrevNextRedirect","redirect","handlers","hotKeyRedirect","nextState","push","initialMessages","localStorage","getItem","App","structureMessages","handleUpdate","handleJSONUpdate","handleAdd","handleAddLocale","handleDeleteLocale","handleUpload","structuredMessages","generateStructure","clonedMessages","merge","prevState","newState","newMessages","newLocation","unshift","unset","setItem","buildResult","generatePaths","setLocation","useEffect","loc","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.14c79f84.chunk.js","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\n\nimport {\n  Redirect,\n  withRouter\n} from 'react-router-dom'\n\nimport './scss/App.scss'\n\n// import withRouter from './components/withRouter'\nimport Sidebar from './components/Sidebar/Sidebar'\nimport Main from './components/Main'\n\nimport generateStructure from './utils/generateStructure'\nimport generatePaths from './utils/generatePaths'\nimport clone from './utils/fastClone'\n\nimport PrevNextRedirect from './components/PrevNextRedirect'\n\nconst initialMessages = JSON.parse(localStorage.getItem('messages')) || {}\n\nconst withRedirect = (WrappedComponent) => (props) => {\n\n  const [location, setLocation] = React.useState(null)\n\n  const redirect = (loc) => {\n    setLocation(loc)\n  }\n\n  React.useEffect(() => {\n    if(location) {\n      setLocation(null)\n    }\n  }, [location])\n\n  return (\n    <>\n      {location && <Redirect to={location} push />}\n      <WrappedComponent {...props} redirect={redirect} />\n    </>\n  )\n  \n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      redirect: null,\n      messages: this.structureMessages(initialMessages),\n    }\n    this.handleUpdate = this.handleUpdate.bind(this)\n    this.handleJSONUpdate = this.handleJSONUpdate.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleAddLocale = this.handleAddLocale.bind(this)\n    this.handleDeleteLocale = this.handleDeleteLocale.bind(this)\n    this.handleUpload = this.handleUpload.bind(this)\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const state = () => {\n      const { messages } = this.state\n      const should = (\n        !_.isEqual(messages, nextState.messages)\n      )\n      return should\n    }/*\n    const props = () => {\n       const { location } = this.props\n      const should = (\n        // we actually only need to rerender when we redirected\n        // this.state.redirect && !_.isEqual(location, nextState.location)\n      )\n      return should\n    }*/\n    return state() //|| props()\n  }\n\n  structureMessages(messages) {\n    const structuredMessages = {}\n    Object.keys(messages).forEach((locale) => {\n      const structure = generateStructure(messages)\n      const clonedMessages = clone(messages[locale])\n      structuredMessages[locale] = _.merge(structure, clonedMessages)\n    })\n    return structuredMessages\n  }\n\n  handleUpdate(path, locale, value) {\n    this.setState((prevState) => {\n      const newState = {}\n      newState.messages = clone(prevState.messages)\n      _.set(newState.messages[locale], path.arr, value)\n      return newState\n    })\n  }\n\n  handleJSONUpdate(json) {\n    json = json ? json : {}\n    this.setState(() => {\n      const newMessages = clone(json)\n      const newState = {\n        messages: this.structureMessages(newMessages)\n      }\n      return newState\n    })\n  }\n\n  handleAdd(path, pathName, type) {\n    this.setState((prevState) => {\n      const newState = {}\n      const newPath = [...path.arr]\n      newPath.push(pathName)\n      const value = type === 'collection' ? {} : ''\n\n      const newLocation = ['/messages', ...newPath]\n      newState.redirect = newLocation.join('/')\n\n      newState.messages = clone(prevState.messages)\n      Object.keys(newState.messages).forEach((locale) => {\n        _.set(newState.messages[locale], newPath, value)\n      })\n      return newState\n    })\n  }\n\n  handleDelete(path) {\n    this.setState((prevState) => {\n      const newState = {}\n      \n      const newLocation = path.arr.slice(0, path.arr.length - 1)\n      newLocation.unshift('/messages')\n      //newState.redirect = newLocation.join('/')\n      this.props.redirect(newLocation.join('/'))\n\n      newState.messages = clone(prevState.messages)\n      Object.keys(newState.messages).forEach((locale) => {\n        _.unset(newState.messages[locale], path.arr)\n      })\n      return newState\n    })\n  }\n\n  handleAddLocale(locale) {\n    this.setState((prevState) => {\n      const newState = {}\n      newState.messages = clone(prevState.messages)\n      const structure = generateStructure(newState.messages)\n      newState.messages[locale] = clone(structure)\n      return newState\n    })\n  }\n\n  handleDeleteLocale(locale) {\n    this.setState((prevState) => {\n      const newState = {}\n      newState.messages = clone(prevState.messages)\n      delete newState.messages[locale]\n      return newState\n    })\n  }\n\n  handleUpload(json, locale) {\n    if(typeof locale === 'undefined') {\n      // if loading all locales\n      this.setState(() => {\n        const newMessages = clone(json)\n        const newState = {\n          messages: this.structureMessages(newMessages)\n        }\n        return newState\n      })\n    } else {\n      // if loading only one locale\n      this.setState((prevState) => {\n        const newMessages = clone(prevState.messages)\n        newMessages[locale] = clone(json)\n        const newState = {\n          messages: this.structureMessages(newMessages)\n        }\n        return newState\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.redirect) {\n      this.setState({\n        redirect: null\n      })\n    }\n    // if messages changed, save them in localstorage\n    if(!_.isEqual(prevState.messages, this.state.messages)) {\n      localStorage.setItem('messages', JSON.stringify(this.state.messages))\n    }\n  }\n\n  render() {\n    const { messages, redirect } = this.state\n    const structure = generateStructure(messages)\n    // we need to generate paths from structure and not messages to avoid\n    // duplicates because of multiple locales\n    const paths = generatePaths(messages, structure)\n\n    return (\n      <div className=\"container\">\n        { redirect && <Redirect push to={redirect} /> }\n        <Sidebar\n          structure={structure}\n          paths={paths}\n          messages={messages}\n          addLocale={this.handleAddLocale}\n          deleteLocale={this.handleDeleteLocale} />\n        <Main\n          structure={structure}\n          paths={paths}\n          messages={messages}\n          updateValue={this.handleUpdate}\n          JSONUpdateValue={this.handleJSONUpdate}\n          deleteValue={this.handleDelete}\n          addValue={this.handleAdd}\n          upload={this.handleUpload}\n          />\n        <PrevNextRedirect paths={ paths } />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(withRedirect(App))\n","import React from 'react'\n\nimport './PathLink.scss'\n\nimport _ from 'lodash'\n\nimport {\n  NavLink\n} from \"react-router-dom\"\n\nimport {\n  Icon\n} from 'semantic-ui-react'\n\nclass PathLink extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { path, className, withAnchor } = this.props\n    const should = (\n      !_.isEqual(path, nextProps.path)\n      || className !== nextProps.className\n      || withAnchor !== nextProps.withAnchor\n    )\n    return should\n  }\n\n  render() {\n    const {\n      path,\n      className,\n      withAnchor\n    } = this.props\n    const icon = path.type === 'collection' ? 'folder' : 'list'\n    const classes = className ? `path-link ${className}` : 'path-link'\n    const destination = withAnchor ? `/messages/${path.str}#${path.id}` : `/messages/${path.str}`\n    return (\n      <NavLink to={destination} activeClassName=\"active\" className={classes} id={path.id} exact>\n        <Icon name={icon}/>{path.name}\n      </NavLink>\n    )\n  }\n}\n\nexport default PathLink","import React from 'react'\n\nimport './AddLocaleButton.scss'\n\nimport {\n  Input\n} from 'semantic-ui-react'\n\nexport default (props) => {\n\n  const { addLocale, messages } = props\n\n  const [ locale, setLocale ] = React.useState('')\n\n  const locales = Object.keys(messages)\n  const enabled = locale.length > 0 && locales.indexOf(locale.toLowerCase()) < 0\n\n  const handleAdd = (e) => {\n    e.preventDefault()\n    if (enabled) {\n      addLocale(locale.toLowerCase())\n      setLocale('')\n    }\n  }\n\n  const handleChange = (e) => {\n    setLocale(e.target.value)\n  }\n\n  return (\n    <form className='add-locale-form'>\n      <Input\n        action={{\n          icon: 'add',\n          disabled: !enabled,\n          onClick: handleAdd\n        }}\n        placeholder='Add locale'\n        value={locale}\n        onChange={handleChange}\n        fluid />\n    </form>\n  )\n}\n","import React from 'react'\n\nimport {\n  Label,\n  Flag,\n  Icon,\n  Popup,\n  Button\n} from 'semantic-ui-react'\n\nimport './DeleteLocaleButton.scss'\n\nexport default (props) => {\n\n  const { deleteLocale, messages } = props\n\n  const handleDelete = (e, targetProps) => {\n    e.preventDefault()\n    deleteLocale(targetProps.value)\n  }\n\n  return (\n\n\n    <Popup\n      className='locales-labels'\n      wide\n      trigger={<Button negative>Delete locales</Button>}\n      on='click'\n      hoverable\n      hideOnScroll\n      position='bottom right'\n      popperModifiers={{ preventOverflow: { boundariesElement: \"window\" } }}\n    >\n      <div>\n        {\n          Object.keys(messages).map((availableLocale) => (\n            <Label key={availableLocale} size='large'>\n              <Flag name={availableLocale.toLowerCase().slice(availableLocale.length - 2, availableLocale.length)} />\n              {availableLocale}\n              <Icon name='delete' onClick={handleDelete} value={availableLocale} />\n            </Label>\n          ))\n        }\n      </div>\n    </Popup>\n  )\n}\n","import React from 'react'\n\nimport './GlobalMenu.scss'\n\nimport AddLocaleButton from '../AddLocaleButton/AddLocaleButton'\nimport DeleteLocaleButton from '../DeleteLocale/DeleteLocaleButton'\n\nclass GlobalMenu extends React.PureComponent {\n  render() {\n    return (\n      <div className='global-menu'>\n        <AddLocaleButton {...this.props} />\n        <DeleteLocaleButton {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default GlobalMenu","import _ from 'lodash'\n\nconst iterate = (base, onString, onObject, path = []) => {\n  const current = path.length ? _.get(base, path) : base\n  if (typeof current === 'string') {\n    return onString(path, current, false)\n  } else if (typeof current === 'object') {\n    const subs = Object.keys(current)\n    if(subs.length) {\n      const deeper = () => {\n        return subs.map(\n          (subPath) => iterate(base, onString, onObject, [...path, subPath])\n        )\n      }\n      return onObject(path, current, deeper)\n    } else {\n      return onObject(path, current, false)\n    }\n    \n  }\n}\n\nexport default iterate","export default (path) => {\n  return path.join('/')\n}","import React from 'react'\nimport _ from 'lodash'\n\nimport './Sidebar.scss'\n\nimport PathLink from '../PathLink/PathLink'\nimport GlobalMenu from '../GlobalMenu/GlobalMenu'\n\nimport iterate from '../../utils/iterate'\nimport pathString from '../../utils/pathString'\n\nclass MessageElement extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { path } = this.props\n    return (\n      !_.isEqual(path, nextProps.path)\n    )\n  }\n\n  render() {\n    const { path } = this.props\n    return (\n      <li className={`item item-message ${path.isValid ? '' : 'invalid'}`}>\n        <PathLink path={path} />\n      </li>\n    )\n  }\n}\n\nclass CollectionElement extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { content, path } = this.props\n    const should = (\n      !_.isEqual(content, nextProps.content)\n      || !_.isEqual(path, nextProps.path)\n    )\n    return should\n  }\n\n  render() {\n    const { content, path } = this.props\n    return (\n      <li className='item item-collection'>\n        <PathLink path={path} />\n        <ul>\n          {content}\n        </ul>\n      </li>\n    )\n  }\n}\n\nclass Iterator extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.onString = this.onString.bind(this)\n    this.onObject = this.onObject.bind(this)\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { paths, structure } = this.props\n    const should = (\n      !_.isEqual(paths, nextProps.paths)\n      || !_.isEqual(structure, nextProps.structure)\n    )\n    return should\n  }\n\n  onString (path, value) {\n\n    const { paths } = this.props\n    const pathData = paths.find((pathEval) => pathEval.str === pathString(path))\n    return (\n      <MessageElement key={pathData.name} path={pathData} />\n    )\n  }\n\n  onObject (path, value, deeper) {\n\n    const { paths } = this.props\n\n    const content = deeper ? deeper() : null\n    if (path.length) {\n      const pathData = paths.find((pathEval) => pathEval.str === pathString(path))\n      return (\n        <CollectionElement key={pathData.name} path={pathData} content={content} />\n      )\n    } else { // root element\n      const pathData = {\n        type: 'collection',\n        str: '',\n        id: 'rt',\n        arr: [],\n        name: 'Root'\n      }\n      return (\n        <CollectionElement path={pathData} content={content} />\n      )\n    }\n  }\n\n  parse (base) { \n    return iterate(base, this.onString, this.onObject)\n  }\n\n  render() {\n    const { structure } = this.props\n\n    return (\n      <ul>\n        {this.parse(structure)}\n      </ul>\n    )\n  }\n}\n\nclass Sidebar extends React.PureComponent {\n  render() {\n    return (\n      <aside className=\"sidebar\">\n        <GlobalMenu {...this.props} />\n        <div className='iterator'>\n          <Iterator {...this.props} />\n        </div>\n      </aside>\n    )\n  }\n}\n\nexport default Sidebar","import React from 'react'\n\nimport {\n  Button\n} from 'semantic-ui-react'\n\nimport './DeleteButton.scss'\n\nexport default (props) => {\n\n  const { deleteValue, path, disabled } = props\n\n  const handleDelete = (e) => {\n    deleteValue(path)\n  }\n\n  return (\n    <Button onClick={handleDelete} disabled={disabled} negative>Delete</Button>\n  )\n}","import React from 'react'\nimport _ from 'lodash'\n\nimport {\n  Flag,\n  Form,\n  TextArea,\n  Segment\n} from 'semantic-ui-react'\n\nimport './MessageEditor.scss'\nimport DeleteButton from '../DeleteButton/DeleteButton'\n\n\nclass MessageField extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { locale, value, onChange } = this.props\n    const should = (\n      locale !== nextProps.locale\n      || value !== nextProps.value\n      || onChange !== nextProps.onChange\n    )\n    return should\n  }\n\n  render() {\n    const { locale, value, onChange } = this.props\n    return (\n      <Segment>\n        <Form.Field>\n          <label htmlFor={locale}>\n            <Flag name={locale.toLowerCase().slice(locale.length - 2, locale.length)} /> {locale.toUpperCase()}\n          </label>\n          <TextArea\n            id={locale}\n            name={locale}\n            value={value}\n            placeholder='Translation'\n            onChange={onChange} />\n        </Form.Field>\n      </Segment>\n    )\n  }\n}\n\n\nexport default class MessageEditor extends React.Component {\n  \n  shouldComponentUpdate(nextProps) {\n    const { messages, structure, path, updateValue } = this.props\n    const should = (\n      !_.isEqual(this.getMessage(messages, path, structure), this.getMessage(nextProps.messages, nextProps.path, nextProps.structure))\n      || updateValue !== nextProps.updateValue\n    )\n    return should\n  }\n\n  getMessage(messages, path, structure) {\n    const message = {}\n\n    Object.keys(messages).forEach((locale) => {\n      message[locale] = _.get(messages[locale], path.arr) || _.get(structure, path.arr)\n    })\n\n    return message\n  }\n\n  render() {\n    const { messages, structure, path, updateValue } = this.props\n\n    const message = this.getMessage(messages, path, structure)\n\n    const handleChange = (e) => {\n      updateValue(path, e.target.name, e.target.value)\n    }\n\n    return (\n      <Form className=\"editor\">\n        <Segment.Group>\n            {\n              Object.keys(messages).map((locale) => (\n                <MessageField key={locale} locale={locale} value={message[locale]} onChange={handleChange} />\n              ))\n            }\n          <Segment>\n            <DeleteButton {...this.props} />\n          </Segment>\n        </Segment.Group>\n      </Form>\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  Input,\n  Select,\n  Button\n} from 'semantic-ui-react'\n\nexport default (props) => {\n\n  const { addValue, path } = props\n\n  const [ pathName, setPathName ] = React.useState('')\n  const [ type, setType ] = React.useState('message')\n\n  const enabled = (pathName.length > 0)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (enabled) {\n      addValue(path, pathName, type)\n      setPathName('')\n    }\n  }\n\n  const handleChangeType = (e, { value }) => {\n    setType(value)\n  }\n\n  const handleChange = (e, { value }) => {\n    setPathName( value )\n  }\n\n  const options = [\n    {key: 'message', text: 'Message', value: 'message'},\n    {key: 'collection', text: 'Collection', value: 'collection'}\n  ]\n\n  return (\n    <form >\n      <Input type='text' placeholder='Add...' value={pathName} onChange={handleChange} action>\n        <input />\n        <Select compact options={options} defaultValue={type} onChange={handleChangeType} />\n        <Button onClick={handleSubmit} disabled={!enabled} icon='add'/>\n      </Input>\n    </form>\n  )\n}","export default (paths, pathname) => {\n  let path\n  let pathId\n  // find current path\n  paths.forEach((pathEval, index) => {\n    if (`/messages/${pathEval.str}` === pathname) {\n      pathId = index\n      path = pathEval\n    }\n  })\n  return {\n    pathId,\n    path,\n    paths\n  }\n}\n","import React from 'react'\nimport _ from 'lodash'\n\nimport {\n  Segment,\n  Menu\n} from 'semantic-ui-react'\n\nimport { withRouter } from 'react-router-dom'\n\nimport './MessageExplorer.scss'\n\nimport PathLink from '../PathLink/PathLink'\n\nimport DeleteButton from '../DeleteButton/DeleteButton'\nimport AddButton from '../AddButton/AddButton'\nimport pathString from '../../utils/pathString'\nimport findPath from '../../utils/findPath'\n\nclass MessageExplorer extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { paths, location } = this.props\n    return (\n      !_.isEqual(paths, nextProps.paths)\n      || !_.isEqual(location, nextProps.location)\n    )\n  }\n\n  render() {\n    const { paths, location } = this.props\n\n    const { path } = findPath(paths, location.pathname)\n  \n    const subPaths = paths.filter((subPath) => {\n      return path && pathString( subPath.arr.slice(0, subPath.arr.length-1) ) === path.str && subPath.arr.length > 0\n    })\n  \n    return (\n      <div className=\"explorer\">\n        <Menu vertical fluid>\n          {\n            subPaths.map((subPath) => {\n              return (\n                <PathLink key={subPath.name} path={subPath} className='item' withAnchor />\n              )\n            })\n          }\n        </Menu>\n        <Segment.Group>\n          <Segment className='actions'>\n            <AddButton {...this.props} />\n            <DeleteButton {...this.props} disabled={path && !path.arr.length} />\n          </Segment>\n        </Segment.Group>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(MessageExplorer)\n","import React from 'react'\n\nimport './NavLinks.scss'\n\nimport {\n  Link,\n  NavLink,\n} from \"react-router-dom\"\n\nexport default (props) => {\n\n  const { pathId, paths } = props\n\n  let prev = null\n  let next = null\n\n  if (pathId > 0) {\n    const newPath = paths[pathId-1]\n    prev = `/messages/${newPath.str}#${newPath.id}`\n  }\n\n  if (pathId < paths.length - 1) {\n    const newPath = paths[pathId+1]\n    next = `/messages/${newPath.str}#${newPath.id}`\n  }\n\n  if(typeof pathId === 'undefined') {\n    const newPath = paths[1]\n    next = newPath ? `/messages/${newPath.str}#${newPath.id}` : null\n  }\n\n  return (\n    <p className='nav-links'>\n      {prev ? <Link to={prev} className='prev ui button'>Prev</Link> : <span className='button ui disabled'>Prev</span>}\n      <NavLink to='/json' activeClassName=\"active\" exact>View JSON</NavLink>\n      {next ? <Link to={next} className='next ui button'>Next</Link> : <span className='button ui disabled'>Next</span>}\n    </p>\n  )\n}","export default (path) => {\n  return path.length ? path.join('-') : 'rt'\n}","import React from 'react'\nimport _ from 'lodash'\n\nimport {\n  Breadcrumb\n} from 'semantic-ui-react'\n\nimport {\n  NavLink\n} from \"react-router-dom\"\n\nimport './Location.scss'\n\nimport pathString from '../../utils/pathString'\nimport pathId from '../../utils/pathId'\n\nclass LocationSection extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { active, link, text } = this.props\n    const should = (\n      active !== nextProps.active\n      || link !== nextProps.link\n      || text !== nextProps.text\n    )\n    return should\n  }\n\n  render() {\n    const { active, link, text } = this.props\n    return (\n      <Breadcrumb.Section active={active}>\n          <NavLink to={link}>{text}</NavLink>\n      </Breadcrumb.Section>\n    )\n  }\n}\n\nclass LocationSections extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const should = (\n      !_.isEqual(this.props.path, nextProps.path)\n    )\n    return should\n  }\n\n  render() {\n    const { path } = this.props\n    \n    if(path && path.arr.length) {\n\n      return (\n        <>\n          {\n            path.arr.map((section, index) => {\n              const str = pathString(path.arr.slice(0,index+1))\n              const id = pathId(path.arr.slice(0,index+1))\n              const link = `/messages/${str}#${id}`\n              const active = index === path.arr.length -1\n              return (\n                <React.Fragment key={link}>\n                  <LocationSection link={link} active={active} text={section}/>\n                  {\n                    (index !== path.arr.length - 1) && (<Breadcrumb.Divider icon='right angle' key={`${link}-divider`}/>)\n                  }\n                </React.Fragment>\n              )\n            })\n          }\n        </>\n      )\n\n    } else {\n      return [\n        <LocationSection key='/messages/' link='/messages/' active text='/'/>\n      ]\n    }\n  }\n}\n\nexport default class Location extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const should = (\n      !_.isEqual(this.props.path, nextProps.path)\n    )\n    return should\n  }\n\n  render () {\n    const { path } = this.props\n\n    return (\n      <Breadcrumb size='massive' className='location' >\n        <LocationSections path={path} />\n      </Breadcrumb>\n    )\n  }\n}\n","import React from 'react'\n\nimport {\n  useParams\n} from \"react-router-dom\"\n\nimport MessageEditor from './MessageEditor/MessageEditor'\nimport MessageExplorer from './MessageExplorer/MessageExplorer'\nimport NavLinks from './NavLinks/NavLinks'\nimport Location from './Location/Location'\n\nexport default (props) => {\n  let { messagePath } = useParams()\n  const { paths } = props\n\n  let pathId\n\n  const path = paths.find((item, index) => {\n    const found = item.str === messagePath\n    if(found) {\n      pathId = index\n    }\n    return found\n  })\n\n  let content\n  if (path && path.type === 'message') {\n    content = <MessageEditor {...props} path={path} pathId={pathId} />\n  } else if (path) {\n    content = <MessageExplorer {...props} path={path} pathId={pathId} />\n  } else {\n    content = <MessageExplorer {...props} path={paths[0]} pathId={0} />\n  }\n\n  return (\n    <div className='column'>\n      <NavLinks {...props} pathId={pathId}/>\n      <div className='panel-wrapper'>\n        <Location path={path} />\n        {content}\n      </div>\n    </div>\n  )\n}\n","export default (value) => (\n  JSON.parse(JSON.stringify(value))\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport _ from 'lodash'\n\nimport Ajv from 'ajv'\n\nimport ace from 'brace'\nimport 'brace/mode/json'\nimport 'brace/theme/github'\n\nimport { JsonEditor as Editor } from 'jsoneditor-react'\nimport 'jsoneditor-react/es/editor.min.css'\n\nimport clone from '../utils/fastClone'\n\nconst ajv = new Ajv({\n  allErrors: true,\n  verbose: true\n})\n\nexport class JSONEditor extends React.Component {\n  constructor(props) {\n    super(props)\n    this.editor = null\n    this.setRef = this.setRef.bind(this)\n    this.runValidation = this.runValidation.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.setOptions = this.setOptions.bind(this)\n    this.state = {\n      value: props.defaultValue || null\n    }\n  }\n\n  setRef (instance) {\n    this.editor = instance\n    this.setOptions(this.props.options)\n    if(typeof this.props.getRef === 'function'){\n      this.props.getRef(instance)\n    }\n  }\n  \n  handleChange(json) {\n\n    const stateUpdated = () => {\n      if(typeof this.props.isValid === 'function') {\n        this.runValidation(json)\n      }\n  \n      if(typeof this.props.onChange === 'function') {\n        this.props.onChange(json)\n      }\n    }\n\n    this.setState({\n      value: clone(json)\n    }, stateUpdated)\n  }\n\n  runValidation(json) {\n    let result\n\n    if(this.editor) {\n      try {\n        this.editor.jsonEditor.get()\n        const valid = this.editor.jsonEditor.validateSchema(json)\n        result = valid === true\n      } catch (e) {\n        result = false\n      }\n    } else {\n      result = false\n    }\n    this.props.isValid(result) \n  }\n\n  setOptions(options) {\n    if(this.editor && typeof options !== 'undefined'){\n      Object.keys(options).forEach((option) => {\n        this.editor.jsonEditor.options[option] = options[option]\n      })\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { value, isValid, allowedModes, mode, readOnly, options, onChange, getRef, onError, defaultValue, htmlElementProps } = this.props\n    const should = (\n        !_.isEqual(value, nextProps.value)\n      || !_.isEqual(defaultValue, nextProps.defaultValue)\n      || !_.isEqual(options, nextProps.options)\n      || !_.isEqual(htmlElementProps, nextProps.htmlElementProps)\n      || isValid !== nextProps.isValid\n      || allowedModes !== nextProps.allowedModes\n      || mode !== nextProps.mode\n      || readOnly !== nextProps.readOnly\n      || onChange !== nextProps.onChange\n      || getRef !== nextProps.getRef\n      || onError !== nextProps.onError\n    )\n    return should\n  }\n\n  componentDidUpdate(prevProps) {\n    const { mode, allowedModes, readOnly, options } = this.props\n    \n    if(readOnly !== prevProps.readOnly) {\n      if(readOnly) {\n        this.editor.jsonEditor.options.modes = ['view', 'code']\n        this.editor.jsonEditor.options.onEditable = () => false\n        this.editor.jsonEditor.setMode('view')\n      } else {\n        this.editor.jsonEditor.options.modes = allowedModes\n        this.editor.jsonEditor.options.onEditable = () => true\n        this.editor.jsonEditor.setMode(mode || allowedModes[0] || 'tree')\n      }\n    }\n\n    if(\n      JSON.stringify(this.props.value) !== JSON.stringify(this.state.value) &&\n      JSON.stringify(this.props.value) !== JSON.stringify(prevProps.value)\n    ) {\n      this.editor.jsonEditor.set(this.props.value)\n    }\n\n    if( !_.isEqual(options, prevProps.options) ) {\n      this.setOptions(options)\n    }\n  }\n\n  componentWillUnmount() {\n    this.editor.jsonEditor.destroy()\n  }\n\n  render() {\n    const {\n      value,\n      defaultValue,\n      onError,\n      htmlElementProps,\n      // properties to not pass along\n      readOnly,\n      getRef,\n      onChange,\n      options,\n      isValid,\n      // rest\n      ...rest\n    } = this.props\n\n    return (\n      <Editor\n        ajv={ajv}\n        ace={ace}\n        {...rest}\n        allowedModes={readOnly ? ['view'] : this.props.allowedModes}\n        mode={readOnly ? 'view' : this.props.mode}\n        ref={this.setRef}\n        value={value || defaultValue}\n        onError={onError}\n        onChange={this.handleChange}\n        htmlElementProps={{\n          ...(htmlElementProps && htmlElementProps),\n          className: (htmlElementProps && htmlElementProps.className) ? htmlElementProps.className +\" hello\" : \"jsoneditor-parent\",\n        }}\n      />\n    )\n  }\n}\n\nJSONEditor.propTypes = {\n  readOnly: PropTypes.bool,\n  isValid: PropTypes.func,\n  getRef: PropTypes.func,\n  onChange: PropTypes.func,\n  onError: PropTypes.func,\n  options: PropTypes.object,\n  mode: PropTypes.string,\n  allowedModes: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array\n  ]),\n  defaultValue: PropTypes.object,\n  htmlElementProps: PropTypes.object,\n}\n","import React from 'react'\n\nimport { Dropdown } from 'semantic-ui-react'\n\nimport 'jsonminify'\n\nexport default class FileInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange = (e) => {\n    const newFile = e.target.files[0]\n    const reader = new FileReader()\n\n    // register event for when the file has finished loading\n    reader.onload = (event) => {\n\n      try {\n        const fileContent = event.target.result\n        let fileObject \n        // Try to parse the JSON file\n        try {\n          fileObject = JSON.parse(JSON.minify(fileContent))\n        } catch (e) {\n          throw new Error('Invalid JSON')\n        }\n\n        const fileName = newFile && escape(newFile.name)\n      \n        const fileType = (newFile && newFile.type) || 'n/a'\n        const fileLastModifiedDate = (newFile && newFile.lastModifiedDate) ? newFile.lastModifiedDate.toLocaleString() : 'n/a'\n      \n        const fileMeta = {\n          name: fileName,\n          type: fileType,\n          size: newFile && newFile.size,\n          lastModified: fileLastModifiedDate\n        }\n\n        this.props.onChange(fileMeta, fileObject)\n\n      } catch (e) {\n        console.error(e)\n      }\n  \n    }\n\n    try {\n      if ( !newFile.type.match('application.json') ) {\n        throw new Error('Invalid file type')\n      }\n      // Read in the file\n      reader.readAsText(newFile)\n    } catch(e) {\n      console.error(e)\n    }\n  }\n\n  render() {\n    const disabled = !(window.File && window.FileReader && window.FileList && window.Blob)\n\n    return (\n      <>\n        <Dropdown.Item\n          content={this.props.label}\n          onClick={() => this.input.click()}\n          disabled={disabled}\n        />\n        <input\n          ref={input => {\n            this.input = input\n          }}\n          type=\"file\"\n          hidden\n          onChange={this.handleChange}\n        />\n      </>\n    )\n  }\n}\n","export const download = (content, filename, mimeType) => {\n  const fakeLink = document.createElement('a');\n  fakeLink.style.display = 'none';\n  document.body.appendChild(fakeLink);\n  const blob = new Blob([content], { type: mimeType });\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      // Manage IE11+ & Edge\n      window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n      fakeLink.setAttribute('href', URL.createObjectURL(blob));\n      fakeLink.setAttribute('download', filename);\n      fakeLink.click();\n  }\n}\n\nexport const downloadJSON = (content, filename) => {\ndownload(content, `${filename}.json`, 'application/json')\n}\n","import React from 'react'\n\nimport './ImportLinks.scss'\n\nimport {\n  Dropdown,\n} from 'semantic-ui-react'\n\nimport FileInput from '../FileInputDropdown'\nimport { downloadJSON } from '../../utils/download'\n\nexport default class ImportLinks extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleFileChangeOne = this.handleFileChangeOne.bind(this)\n    this.handleFileChangeAll = this.handleFileChangeAll.bind(this)\n    this.handleDownloadByLocale = this.handleDownloadByLocale.bind(this)\n    this.handleDownloadAll = this.handleDownloadAll.bind(this)\n  }\n\n  handleFileChangeOne (fileMeta, fileData) {\n    const { upload } = this.props\n    const fileNameArr = fileMeta.name.split('.')\n    const locale = fileNameArr.slice(0, fileNameArr.length - 1).join('.')\n    upload(fileData, locale)\n  }\n\n  handleFileChangeAll (fileMeta, fileData) {\n    const { upload } = this.props\n    upload(fileData)\n  }\n\n  handleDownloadAll () {\n    const { messages } = this.props\n    downloadJSON(JSON.stringify(messages), 'locales')\n  }\n\n  handleDownloadByLocale () {\n    const { messages } = this.props\n    Object.keys(messages).forEach((locale) => {\n      downloadJSON(JSON.stringify(messages[locale]), locale)\n    })\n  }\n\n  render() {\n    return (\n      <div className='import-links'>\n        <Dropdown\n          text='Import'\n          icon='upload'\n          floating\n          labeled\n          button\n          className='icon'\n        >\n          <Dropdown.Menu>\n            <FileInput label='Import a locale' onChange={this.handleFileChangeOne}/>\n            <FileInput label='Import all locales' onChange={this.handleFileChangeAll}/>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Dropdown\n          text='Download'\n          icon='download'\n          floating\n          labeled\n          button\n          className='icon'\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={this.handleDownloadAll}>All</Dropdown.Item>\n            <Dropdown.Item onClick={this.handleDownloadByLocale}>By locales</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport './JSONPanel.scss'\n\nimport { JSONEditor } from '../JSONEditor'\nimport ImportLinks from '../ImportLinks/ImportLinks'\n\nimport 'jsonminify'\n\nclass JSONPanel extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.handleJSONChange = this.handleJSONChange.bind(this)\n  }\n\n  handleJSONChange(json) {\n    const { onChange } = this.props\n    onChange(json)\n  }\n\n  render() {\n    const { messages } = this.props\n    \n    return (\n      <div className='column'>\n        <ImportLinks {...this.props} />\n        <div className='panel-wrapper json-panel'>\n          <JSONEditor\n            value={messages}\n            onChange={this.handleJSONChange}\n            history={true}\n            mode='form'\n            allowedModes={['form', 'code', 'view']}\n            //isValid={handleJSONValid}\n            // schema={schema}\n            // options={options}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default JSONPanel\n","import React from 'react'\nimport _ from 'lodash'\n\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\"\n\nimport PathParser from './PathParser'\nimport JSONPanel from './JSONPanel/JSONPanel'\n\nclass Main extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    const { JSONUpdateValue, addValue, deleteValue, messages, paths, structure, updateValue } = this.props\n    const should = (\n      JSONUpdateValue !== nextProps.JSONUpdateValue\n      || addValue !== nextProps.addValue\n      || deleteValue !== nextProps.deleteValue\n      || updateValue !== nextProps.updateValue\n      || !_.isEqual(messages, nextProps.messages)\n      || !_.isEqual(paths, nextProps.paths)\n      || !_.isEqual(structure, nextProps.structure)\n    )\n    return should\n  }\n\n  render(){\n    //let match = useRouteMatch()\n    return (\n      <Switch>\n        <Route path=\"/messages/:messagePath*\">\n          <PathParser {...this.props} />\n        </Route>\n        <Route path=\"/json\">\n          <JSONPanel {...this.props} onChange={this.props.JSONUpdateValue} />\n        </Route>\n      </Switch>\n    )\n  }\n}\n\nexport default Main","import _ from 'lodash'\nimport iterate from './iterate'\n\nexport default (messages) => {\n  const locales = Object.keys(messages)\n  const structure = {}\n\n  // when we get a message string, add it to the structure\n  const onString = (path, value) => {\n    _.set(structure, path, '')\n  }\n\n  // when we get a message, keep digging until we can't\n  const onObject = (path, value, deeper) => {\n    if(deeper) {\n      deeper()\n    } else {\n      _.set(structure, path, {})\n    }\n  }\n\n  locales.forEach((locale) => {\n    iterate(messages[locale], onString, onObject)\n  })\n  \n  return structure\n}\n","export default (path) => {\n  return path.length ? path[path.length-1] : 'Root'\n}","import React from 'react'\nimport _ from 'lodash'\n\nimport {\n  withRouter,\n  Redirect\n} from 'react-router-dom'\n\nimport {\n  GlobalHotKeys\n} from 'react-hotkeys'\n\nimport HashLinkObserver from \"react-hash-link\"\n\nimport findPath from '../utils/findPath'\n\nconst keyMap = {\n  PREV: ['ArrowLeft'],\n  NEXT: ['ArrowRight']\n}\n\nclass PrevNextRedirect extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      redirect: null\n    }\n    this.handlers = {\n      PREV: this.hotKeyRedirect('prev').bind(this),\n      NEXT: this.hotKeyRedirect('next').bind(this)\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const state = () => {\n      const { redirect } = this.state\n      const should = (\n        redirect !== nextState.redirect\n      )\n      return should\n    }\n    const props = () => {\n      const { paths, location } = this.props\n      const should = (\n        // we actually only need to rerender when we redirected\n        ( this.state.redirect && !_.isEqual(location, nextState.location) )\n        || !_.isEqual(paths, nextProps.paths)\n      )\n      return should\n    }\n    return state() || props()\n  }\n\n  hotKeyRedirect(destination) {\n    return (e) => {\n      // find current path\n      const { pathId, paths } = findPath(this.props.paths, this.props.location.pathname)\n\n      let path\n      if (destination === 'prev'){\n        // if we're not on the first element, go to the prev one, otherwise loop to last (either undefined or first)\n        if ( pathId > 0) {\n          path = paths[pathId-1]\n        } else {\n          path = paths[paths.length - 1]\n        }\n      }\n    \n      if (destination === 'next') {\n        // if we're not on the last element, go to the next one, otherwise loop to first (either undefined or last)\n        if (pathId < paths.length - 1) {\n          path = paths[pathId+1]\n        } else {\n          path = paths[0]\n        }\n      }\n\n      let location = null\n\n      if(path) {\n        location = `/messages/${path.str}#${path.id}`\n      }\n\n      this.setState({\n        redirect: location\n      })\n    }\n  }\n\n  render() {\n    const { redirect } = this.state\n    return (\n      <>\n        { redirect && <Redirect push to={redirect} /> }\n        <GlobalHotKeys keyMap={keyMap} handlers={this.handlers} />\n        <HashLinkObserver />\n      </>\n    )\n  }\n}\n\nexport default withRouter(PrevNextRedirect)","import iterate from './iterate'\nimport _ from 'lodash'\nimport pathString from './pathString'\nimport pathName from './pathName'\nimport pathId from './pathId'\n\nexport default (messages, structure) => {\n  const paths = []\n\n  const buildResult = (path, type, value) => {\n    let isValid = true\n    Object.keys(messages).forEach((locale) => {\n      const message = _.get(messages[locale], path)\n      // for it to be valid, it need to be set to valid previously, and to exist\n      isValid = isValid && message && !!message.length\n    })\n\n    return {\n      type: type,\n      str: pathString(path),\n      id: pathId(path),\n      arr: path,\n      name: pathName(path),\n      isValid: isValid\n    }\n  }\n\n  const onString = (path, value) => {\n    paths.push(buildResult(path, 'message', value))\n  }\n\n  const onObject = (path, value, deeper) => {\n    paths.push(buildResult(path, 'collection', null))\n    if (deeper) {\n      deeper()\n    }\n  }\n\n  iterate(structure, onString, onObject)\n\n  return paths\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import './wdyr'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/index.scss'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}